# Dynamic Bandwidth Monitor
# Leak detection method implemented in a real-time data historian
# Copyright (C) 2014-2020  J.H. Fiti√©, Vitens N.V.
#
# This file is part of DBM.
#
# DBM is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# DBM is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with DBM.  If not, see <http://www.gnu.org/licenses/>.

skip_tags: true

before_build:
  cmd: |-
    set PIHOME=%TEMP%
    mkdir "%PIHOME%\AF\PublicAssemblies\4.0"
    git show 635d59fdc8fb7f0de98d57b40ae83d5ebb37c683:OSIsoft.AFSDK.dll > "%PIHOME%\AF\PublicAssemblies\4.0\OSIsoft.AFSDK.dll"
    for /f "delims=" %%i in ('git rev-parse --short HEAD') do set commit=%%i
    powershell -Command "(Get-Content src\dbm\DBMInfo.vb) -replace 'Const GITHASH As String = \".*?\"', 'Const GITHASH As String = \"%commit%\"' | Set-Content src\dbm\DBMInfo.vb"

build_script:
  cmd: |-
    build.bat

after_build:
  cmd: |-
    set product=DBM
    for /f "delims=" %%i in ('powershell -Command "(Get-Item build\DBM.dll).VersionInfo.ProductVersion"') do set version=%%i
    for /f "delims=" %%i in ('powershell -Command "(Get-Item build\DBM.dll).VersionInfo.CompanyName"') do set company=%%i
    "%ProgramFiles(x86)%\Inno Setup 5\ISCC.exe" /O"%TEMP%" /FSetup_%product%_v%version%+%commit% /Q src\res\dbm.iss
    appveyor PushArtifact "%TEMP%\Setup_%product%_v%version%+%commit%.exe"

test_script:
  cmd: |-
    "%TEMP%\Setup_%product%_v%version%+%commit%.exe" /VERYSILENT /NORESTART
    "%ProgramFiles(x86)%\%company%\%product%\samples\runsamples.bat"
    powershell -Command "exit [int]!(Get-FileHash %ProgramFiles(x86)%\%company%\%product%\samples\sample1.csv -Algorithm MD5).Hash.ToLower().Equals('0eabfae68d91e43978b3598fb814800b')"
    powershell -Command "exit [int]!(Get-FileHash '%ProgramFiles(x86)%\%company%\%product%\samples\sample2.csv' -Algorithm MD5).Hash.ToLower().Equals('ad9da966b42f153233d57603a4da2088')"
    powershell -Command "exit [int]!(Get-FileHash '%ProgramFiles(x86)%\%company%\%product%\samples\sample3.csv' -Algorithm MD5).Hash.ToLower().Equals('da689c74982ab2f6cd98e41b07bc01d6')"
    powershell -Command "exit [int]!(Get-FileHash '%ProgramFiles(x86)%\%company%\%product%\samples\sample4.csv' -Algorithm MD5).Hash.ToLower().Equals('481f46dfbfb4ef38ceed92d3a2d28b25')"

deploy:
  tag: 'v$(version)+$(commit)'
  release: '$(product) v$(version)+$(commit)'
  description: '$(APPVEYOR_REPO_COMMIT_MESSAGE)'
  provider: GitHub
  auth_token:
    secure: BrTAHlG3kNuONUuCV7ZEqGZmiLwLr3bMDGexczO4xd+i8ZtVLUgMzBRMpEhdSzbK
  artifact: /.*/
  draft: false
  prerelease: false
  on:
    branch: master
