# Dynamic Bandwidth Monitor
# Leak detection method implemented in a real-time data historian
# Copyright (C) 2014-2021  J.H. Fiti√©, Vitens N.V.
#
# This file is part of DBM.
#
# DBM is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# DBM is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with DBM.  If not, see <http://www.gnu.org/licenses/>.

skip_tags: true

environment:
  piafsdksecret:
    secure: U6mCnueqqfX1Ykv8Gki8A2nRcZ+R8AlDKMA7IumC7oeC7uCPaHqA1ExWeejJipB3
  piafsdksalt:
    secure: +sv+8rzvigIHMUyI8yz5ISB+YmM1tYoXWiHgxPYz5Oa8YSm6oLWkzzf0GCVzYlNfGm/snIORVJ4aUpBl/J7d3Q==
  certsecret:
    secure: JtaHKfJlMN0jHpEMoRkZToY6EWzsIBFbX+6CxSqCkl3QJN2/RYxIPp9zhzS4yEK9
  certsalt:
    secure: ImaLkIXP7w8kRynj0LP4o2uWVfOdShGuN7A0SZUCWsNnD9nP6MxI3sldOEGl3X2OT71sUu8Wt+Qk725LLz3kRQ==
  certpassword:
    secure: ++tUtFqUQwnWMoqYt6dbNgASvTKp+GBKC8fhU1ydg/8qsS04tl+MeAn4BSryhUDH

install:
  cmd: |-
    powershell -Command "iex ((New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/appveyor/secure-file/master/install.ps1')) | Out-Null"
    set PIHOME=%TEMP%
    set piafsdkpath=%PIHOME%\AF\PublicAssemblies\4.0
    mkdir "%piafsdkpath%"
    if defined piafsdksecret if defined piafsdksalt appveyor-tools\secure-file -decrypt enc\OSIsoft.AFSDK.dll.enc -secret %piafsdksecret% -salt %piafsdksalt% -out "%piafsdkpath%\OSIsoft.AFSDK.dll"
    set certificate=%TEMP%\certificate.pfx
    if defined certsecret if defined certsalt appveyor-tools\secure-file -decrypt enc\certificate.pfx.enc -secret %certsecret% -salt %certsalt% -out "%certificate%"

before_build:
  cmd: |-
    for /f "delims=" %%i in ('git rev-parse --short HEAD') do set commit=%%i
    powershell -Command "(Get-Content src\dbm\DBMInfo.vb) -replace 'Const GITHASH As String = \".*?\"', 'Const GITHASH As String = \"%commit%\"' | Set-Content src\dbm\DBMInfo.vb"

build_script:
  cmd: |-
    build.bat
    if exist "%certificate%" if defined certpassword sign.bat "%certificate%" "%certpassword%" > NUL

after_build:
  cmd: |-
    set product=DBM
    for /f "delims=" %%i in ('powershell -Command "(Get-Item build\DBM.dll).VersionInfo.ProductVersion"') do set version=%%i
    for /f "delims=" %%i in ('powershell -Command "(Get-Item build\DBM.dll).VersionInfo.CompanyName"') do set company=%%i
    set installer=Setup_%product%_v%version%+%commit%.exe
    "%ProgramFiles(x86)%\Inno Setup 5\ISCC.exe" /O"%TEMP%" /F%installer:~,-4% /Q src\res\dbm.iss
    if exist "%certificate%" if defined certpassword sign.bat "%certificate%" "%certpassword%" "%TEMP%\%installer%" > NUL
    appveyor PushArtifact "%TEMP%\%installer%"

test_script:
  cmd: |-
    "%TEMP%\%installer%" /VERYSILENT /NORESTART
    set installationpath=%ProgramFiles(x86)%\%company%\%product%
    "%installationpath%\build\DBMAbout.exe"
    "%installationpath%\samples\runsamples.bat"
    powershell -Command "exit [int]!(Get-FileHash '%installationpath%\samples\sample1.csv' -Algorithm MD5).Hash.ToLower().Equals('86518ea3fff3487e1ea1dd7576af57aa')"
    powershell -Command "exit [int]!(Get-FileHash '%installationpath%\samples\sample2.csv' -Algorithm MD5).Hash.ToLower().Equals('c9950dbcba08cb61afff3ae79ee02b3d')"
    powershell -Command "exit [int]!(Get-FileHash '%installationpath%\samples\sample3.csv' -Algorithm MD5).Hash.ToLower().Equals('583f1beb31de05423e45240fcc7a5d03')"
    powershell -Command "exit [int]!(Get-FileHash '%installationpath%\samples\sample4.csv' -Algorithm MD5).Hash.ToLower().Equals('54338327171910f7fa84d8f2fb57467c')"

deploy:
  tag: 'v$(version)+$(commit)'
  release: '$(product) v$(version)+$(commit)'
  description: '$(APPVEYOR_REPO_COMMIT_MESSAGE)'
  provider: GitHub
  auth_token:
    secure: BrTAHlG3kNuONUuCV7ZEqGZmiLwLr3bMDGexczO4xd+i8ZtVLUgMzBRMpEhdSzbK
  artifact: /.*/
  draft: false
  prerelease: false
  on:
    branch: master
