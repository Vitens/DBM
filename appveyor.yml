# Dynamic Bandwidth Monitor
# Leak detection method implemented in a real-time data historian
# Copyright (C) 2014-2020  J.H. Fiti√©, Vitens N.V.
#
# This file is part of DBM.
#
# DBM is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# DBM is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with DBM.  If not, see <http://www.gnu.org/licenses/>.

skip_tags: true

environment:
  certsecret:
    secure: JtaHKfJlMN0jHpEMoRkZToY6EWzsIBFbX+6CxSqCkl3QJN2/RYxIPp9zhzS4yEK9
  certsalt:
    secure: ImaLkIXP7w8kRynj0LP4o2uWVfOdShGuN7A0SZUCWsNnD9nP6MxI3sldOEGl3X2OT71sUu8Wt+Qk725LLz3kRQ==
  certpassword:
    secure: ++tUtFqUQwnWMoqYt6dbNgASvTKp+GBKC8fhU1ydg/8qsS04tl+MeAn4BSryhUDH

install:
  cmd: |-
    powershell -Command "iex ((New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/appveyor/secure-file/master/install.ps1')) | Out-Null"
    if defined certsecret if defined certsalt appveyor-tools\secure-file -decrypt src\res\certificate.pfx.enc -secret %certsecret% -salt %certsalt% -out "%TEMP%\certificate.pfx"
    rmdir /S /Q appveyor-tools
    set PIHOME=%TEMP%
    mkdir "%PIHOME%\AF\PublicAssemblies\4.0"
    git show 635d59fdc8fb7f0de98d57b40ae83d5ebb37c683:OSIsoft.AFSDK.dll > "%PIHOME%\AF\PublicAssemblies\4.0\OSIsoft.AFSDK.dll"

before_build:
  cmd: |-
    for /f "delims=" %%i in ('git rev-parse --short HEAD') do set commit=%%i
    powershell -Command "(Get-Content src\dbm\DBMInfo.vb) -replace 'Const GITHASH As String = \".*?\"', 'Const GITHASH As String = \"%commit%\"' | Set-Content src\dbm\DBMInfo.vb"

build_script:
  cmd: |-
    build.bat
    if exist "%TEMP%\certificate.pfx" if defined certpassword sign.bat "%TEMP%\certificate.pfx" "%certpassword%"

after_build:
  cmd: |-
    set product=DBM
    for /f "delims=" %%i in ('powershell -Command "(Get-Item build\DBM.dll).VersionInfo.ProductVersion"') do set version=%%i
    for /f "delims=" %%i in ('powershell -Command "(Get-Item build\DBM.dll).VersionInfo.CompanyName"') do set company=%%i
    "%ProgramFiles(x86)%\Inno Setup 5\ISCC.exe" /FSetup_%product%_v%version%+%commit% /Q src\res\dbm.iss
    if exist "%TEMP%\certificate.pfx" if defined certpassword sign.bat "%TEMP%\certificate.pfx" "%certpassword%" Output\Setup_%product%_v%version%+%commit%.exe
    appveyor PushArtifact Output\Setup_%product%_v%version%+%commit%.exe

test_script:
  cmd: |-
    Output\Setup_%product%_v%version%+%commit%.exe /VERYSILENT /NORESTART
    "%ProgramFiles(x86)%\%company%\%product%\build\DBMAbout.exe"
    "%ProgramFiles(x86)%\%company%\%product%\samples\runsamples.bat"
    powershell -Command "exit [int]!(Get-FileHash '%ProgramFiles(x86)%\%company%\%product%\samples\sample1.csv' -Algorithm MD5).Hash.ToLower().Equals('803d8e67c7aa1a7e2610096e167d8b21')"
    powershell -Command "exit [int]!(Get-FileHash '%ProgramFiles(x86)%\%company%\%product%\samples\sample2.csv' -Algorithm MD5).Hash.ToLower().Equals('6d2671702c05ab051f7e705bcc127577')"
    powershell -Command "exit [int]!(Get-FileHash '%ProgramFiles(x86)%\%company%\%product%\samples\sample3.csv' -Algorithm MD5).Hash.ToLower().Equals('bb3e0bea35ca0fa2a56d307053fd595b')"
    powershell -Command "exit [int]!(Get-FileHash '%ProgramFiles(x86)%\%company%\%product%\samples\sample4.csv' -Algorithm MD5).Hash.ToLower().Equals('d43382b707a563493a4265646d185af5')"

deploy:
  tag: 'v$(version)+$(commit)'
  release: '$(product) v$(version)+$(commit)'
  description: '$(APPVEYOR_REPO_COMMIT_MESSAGE)'
  provider: GitHub
  auth_token:
    secure: BrTAHlG3kNuONUuCV7ZEqGZmiLwLr3bMDGexczO4xd+i8ZtVLUgMzBRMpEhdSzbK
  artifact: /.*/
  draft: false
  prerelease: false
  on:
    branch: master
